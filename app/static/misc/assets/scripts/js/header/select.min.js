function getPasteEvent() {
    var e = document.createElement("input"),
        t = "onpaste";
    return e.setAttribute(t, ""), "function" == typeof e[t] ? "paste" : "input"
}
var pasteEventName = getPasteEvent() + ".mask",
    ua = navigator.userAgent,
    iPhone = /iphone/i.test(ua),
    android = /android/i.test(ua),
    caretTimeoutId;
$.mask = {
    definitions: {
        9: "[0-9]",
        a: "[A-Za-z]",
        "*": "[A-Za-z0-9]"
    },
    dataName: "rawMaskFn",
    placeholder: "_"
}, $.fn.extend({
    caret: function(e, t) {
        var a;
        if (0 !== this.length && !this.is(":hidden")) return "number" == typeof e ? (t = "number" == typeof t ? t : e, this.each(function() {
            this.setSelectionRange ? this.setSelectionRange(e, t) : this.createTextRange && ((a = this.createTextRange()).collapse(!0), a.moveEnd("character", t), a.moveStart("character", e), a.select())
        })) : (this[0].setSelectionRange ? (e = this[0].selectionStart, t = this[0].selectionEnd) : document.selection && document.selection.createRange && (a = document.selection.createRange(), e = 0 - a.duplicate().moveStart("character", -1e5), t = e + a.text.length), {
            begin: e,
            end: t
        })
    },
    unmask: function() {
        return this.trigger("unmask")
    },
    mask: function(e, t) {
        var a, n, i, r, o;
        return !e && this.length > 0 ? $(this[0]).data($.mask.dataName)() : (t = $.extend({
            placeholder: $.mask.placeholder,
            completed: null
        }, t), a = $.mask.definitions, n = [], i = o = e.length, r = null, $.each(e.split(""), function(e, t) {
            "?" == t ? (o--, i = e) : a[t] ? (n.push(new RegExp(a[t])), null === r && (r = n.length - 1)) : n.push(null)
        }), this.trigger("unmask").each(function() {
            function s(e) {
                for (; ++e < o && !n[e];);
                return e
            }

            function c(e) {
                for (; --e >= 0 && !n[e];);
                return e
            }

            function d(e, a) {
                var i, c;
                if (!(e < 0)) {
                    for (i = e, c = s(a); i < o; i++)
                        if (n[i]) {
                            if (!(c < o && n[i].test(v[c]))) break;
                            v[i] = v[c], v[c] = t.placeholder, c = s(c)
                        }
                    f(), h.caret(Math.max(r, e))
                }
            }

            function l(e) {
                var a, i, r, c;
                for (a = e, i = t.placeholder; a < o; a++)
                    if (n[a]) {
                        if (r = s(a), c = v[a], v[a] = i, !(r < o && n[r].test(c))) break;
                        i = c
                    }
            }

            function _(e) {
                var t, a, n, i = e.which;
                8 === i || 46 === i || iPhone && 127 === i ? (t = h.caret(), a = t.begin, (n = t.end) - a == 0 && (a = 46 !== i ? c(a) : n = s(a - 1), n = 46 === i ? s(n) : n), u(a, n), d(a, n - 1), e.preventDefault()) : 27 == i && (h.val(k), h.caret(0, m()), e.preventDefault())
            }

            function p(e) {
                var a, i, r, c = e.which,
                    _ = h.caret();
                e.ctrlKey || e.altKey || e.metaKey || c < 32 || c && (_.end - _.begin != 0 && (u(_.begin, _.end), d(_.begin, _.end - 1)), (a = s(_.begin - 1)) < o && (i = String.fromCharCode(c), n[a].test(i) && (l(a), v[a] = i, f(), r = s(a), android ? setTimeout($.proxy($.fn.caret, h, r), 0) : h.caret(r), t.completed && r >= o && t.completed.call(h))), e.preventDefault())
            }

            function u(e, a) {
                var i;
                for (i = e; i < a && i < o; i++) n[i] && (v[i] = t.placeholder)
            }

            function f() {
                h.val(v.join(""))
            }

            function m(e) {
                var a, s, c = h.val(),
                    d = -1;
                for (a = 0, pos = 0; a < o; a++)
                    if (n[a]) {
                        for (v[a] = t.placeholder; pos++ < c.length;)
                            if (s = c.charAt(pos - 1), n[a].test(s)) {
                                v[a] = s, d = a;
                                break
                            }
                        if (pos > c.length) break
                    } else v[a] === c.charAt(pos) && a !== i && (pos++, d = a);
                return e ? f() : d + 1 < i ? (h.val(""), u(0, o)) : (f(), h.val(h.val().substring(0, d + 1))), i ? a : r
            }
            var h = $(this),
                v = $.map(e.split(""), function(e, n) {
                    if ("?" != e) return a[e] ? t.placeholder : e
                }),
                k = h.val();
            h.data($.mask.dataName, function() {
                return $.map(v, function(e, a) {
                    return n[a] && e != t.placeholder ? e : null
                }).join("")
            }), h.attr("readonly") || h.one("unmask", function() {
                h.unbind(".mask").removeData($.mask.dataName)
            }).bind("focus.mask", function() {
                clearTimeout(caretTimeoutId);
                var t;
                k = h.val(), t = m(), caretTimeoutId = setTimeout(function() {
                    f(), t == e.length ? h.caret(0, t) : h.caret(t)
                }, 10)
            }).bind("blur.mask", function() {
                m(), h.val() != k && h.change()
            }).bind("keydown.mask", _).bind("keypress.mask", p).bind(pasteEventName, function() {
                setTimeout(function() {
                    var e = m(!0);
                    h.caret(e), t.completed && e == h.val().length && t.completed.call(h)
                }, 0)
            }), m()
        }))
    }
});
var initDp;

$(document).ready(function() {
  // function appendList(inst, className) {
  //     var $selectElement = inst.dpDiv.find('.' + className);
  //     var selected = $selectElement.find("option[selected]");
  //     var $listElement = $('<dl class="{0} dropdown"></dl>'.replace('{0}', className + '-list')).appendTo($selectElement.parent());
  //     $listElement.append('<dt><a href="#">' + selected.text() + '<span class="value">' + selected.val() + '</span></a></dt>');
  //     $listElement.append('<dd><ul class="dateListItem" ></ul></dd>');
  //     $selectElement.children('option').each(function () {
  //         var $listItem = $listElement.find(".dateListItem").append('<li><a href="#">' + $(this).text() + '<span class="value">' + $(this).val() + '</span></a></li>');
  //         $listItem.hide();
  //         $listItem.find('a').click(function (e) {
  //             e.preventDefault();
  //             $selectElement.val($(this).find('span').text());
  //             $selectElement.change();
  //         });
  //     });
  //     $listElement.find('dt a').click(function (e) {
  //         e.preventDefault();
  //         $(this).closest('dt')
  //           .siblings('dd')
  //           .find('.dateListItem')
  //           .toggle();
  //     });
  // }
  //
  // function convertToLists(inst) {
  //     var self = this;
  //     setTimeout(function () {
  //       inst.dpDiv.addClass('datePickerWithLists');
  //       appendList(inst, 'ui-datepicker-month');
  //       appendList(inst, 'ui-datepicker-year');
  //     }, 0);
  // }
  $(document).on('focus', ".jq-f-datepicker", function(e) {
    if ($(this).hasClass('input-min')) {
      if ($(this).attr('data-type')) {
        var type = $(this).attr('data-type');
        setTimeout(function(){
          $(document).find('.range-datepicker__item').css('display', 'none');
          $(document).find('.range-datepicker__item_min[data-type="'+type+'"]').css('display', 'block');
          // $('.range-datepicker__item_min').find('.ui-datepicker-prev').click();
        }, 100);
      } else {
        setTimeout(function(){
          $(document).find('.range-datepicker__item_max').css('display', 'none');
          $(document).find('.range-datepicker__item_min').css('display', 'block');
          // $('.range-datepicker__item_min').find('.ui-datepicker-prev').click();
        }, 100);
      }
      // $('.range-datepicker__item_min').find('.ui-datepicker-next').click();
    }
    else {
      if ($(this).attr('data-type')) {
        var type = $(this).attr('data-type');
        setTimeout(function(){
          $(document).find('.range-datepicker__item').css('display', 'none');
          $(document).find('.range-datepicker__item_max[data-type="'+type+'"]').css('display', 'block');
          // $('.range-datepicker__item_max').find('.ui-datepicker-prev').click();
        }, 100);
      } else {
        setTimeout(function(){
          $(document).find('.range-datepicker__item_min').css('display', 'none');
          $(document).find('.range-datepicker__item_max').css('display', 'block');
          // $('.range-datepicker__item_max').find('.ui-datepicker-prev').click();
        }, 100);
      }
      // $('.range-datepicker__item_max').find('.ui-datepicker-next').click();
    }
  });

    function e(e) {
        return /^(0?[1-9]|[12][0-9]|3[01])\.(0?(?:[1-9]|1[0-2]))\.[0-9]{2}$/.test(e)
    }

    function t(e, t) {
        var a = e.split("."),
            n = t.split("."),
            i = new Date(+a[2] + 2e3, a[1] - 1, a[0]);
        return !(new Date(+n[2] + 2e3, n[1] - 1, n[0]) > i)
    }

    function a(e, t) {
        function a() {
            i.find(".on-hover_active").removeClass("on-hover_active"), i.find(".on-hover-content").slideUp(321), e.addClass("on-hover_active"), e.parent().addClass("on-hover_active").parent().find(".code__tit").addClass("on-hover_active"), i.find(".on-hover-sibling-" + n).addClass("on-hover_active"), i.find(".on-hover-content-" + n).slideDown(321)
        }
        var n = e.attr("data-hover-index"),
            i = $(".on-hover-parent-" + e.attr("data-hover-parent"));
        e.hasClass("on-hover_active") || (t ? (e.addClass("hover"), setTimeout(function() {
            e.hasClass("hover") && a()
        }, 321)) : a())
    }
    var n = $(window).width();
    $(document).on("click", ".select__btn", function() {
        var e = $(this);
        return e.hasClass("select__btn_act") ? e.next().slideUp(321, function() {
            e.removeClass("select__btn_act")
        }) : ($(".select__drop").slideUp(321, function() {
            $(".select__btn").removeClass("select__btn_act")
        }), e.addClass("select__btn_act").next().slideDown(321)), !1
    }), $(document).on("click", ".select__a", function() {
        var e = $(this);
        return e.parent().parent().prev().text(e.text()), $(e.attr("href")).length > 0 && ($(e.attr("href")).parent().find(".select-content").slideUp(321), $(e.attr("href")).slideDown(321)), $(".select__drop").slideUp(321, function() {
            $(".select__btn").removeClass("select__btn_act")
        }), !1
    }), initDp = function() {
        $(".jq-datepicker").length > 0 && $(".jq-datepicker").datepicker({
            dateFormat: "dd.mm.yy",
            changeMonth: !0,
            changeYear: !0,
            showOtherMonths: !0,
            selectOtherMonths: !0,
            firstDay: 1,
            monthNames: ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"],
            monthNamesShort: ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"],
            dayNamesMin: ["вс", "пн", "вт", "ср", "чт", "пт", "сб"],
            // beforeShow: function(e, t, inst) {
            //   convertToLists(inst)
            //     $("#ui-datepicker-div").removeClass(function() {
            //         return $("input").get(0).id
            //     }), $("#ui-datepicker-div").removeClass("datepicker__show"), $("#ui-datepicker-div").addClass($(this).attr("class"))
            // },
            // onChangeMonthYear: function (year, month, inst) {
            //   convertToLists(inst);
            // }
        })
    }, $(document).on("click", function(e) {
        $(e.target).closest(".ui-datepicker").length && $(e.target).hasClass("jq-datepicker") || $(".jq-datepicker").blur()
    });
      
    window.rangeDatepickerInit = function(element, mindate, maxdate) {
      
      var minDateVal = mindate.split('-');
      var maxDateVal = maxdate.split('-');

      $(element).length > 0 && ($(element).datepicker('destroy'), $('.jq-f-datepicker').val('дд.мм.гг'),
        $(element).datepicker({
          dateFormat: "dd.mm.y",
          changeMonth: true,
          changeYear: true,
          showOtherMonths: true,
          selectOtherMonths: true,
          firstDay: 1,
          monthNames: ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"],
          monthNamesShort: ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"],
          dayNamesMin: ["вс", "пн", "вт", "ср", "чт", "пт", "сб"],
          minDate: new Date(minDateVal[2], minDateVal[0]-1, minDateVal[1]),
          maxDate: new Date(maxDateVal[2], maxDateVal[0]-1, maxDateVal[1]),
          onSelect: function(e, t) {
            // setTimeout(function(){
            //   $('.range-datepicker__item_max').find('.ui-datepicker-prev').click();
            // }, 100);
            // $('.range-datepicker__item_max').find('.ui-datepicker-next').click();
  
              var a = $(this).attr("data-range"),
                  n = $(this).parent().attr("data-range-box");
	 		
	 		if ($(this).attr('data-type')) {
	 			var type = $(this).attr('data-type');
	 		}
	 		
              "max" == a ? ($("#" + n + " .input-max").val(e), $(".range-datepicker").fadeOut(321), $(".range-datepicker__item_min, .range-datepicker__item_max").removeAttr("style"), $(".input-max").removeClass("focused"), $(".form__date-range").removeClass("form__date-range_focus"), type ? $('.range-datepicker__item_min[data-type="'+type+'"]').datepicker("option", {
                  maxDate: e
              }): $(".range-datepicker__item_min").datepicker("option", {
                  maxDate: e
              })) : "min" == a && ($("#" + n + " .input-min").val(e), $(this).fadeOut(321).next().fadeIn(321), $("#rid-0").children(".input-max").addClass("focused"), type ? $('.range-datepicker__item_max[data-type="'+type+'"]').datepicker("option", {
                  minDate: e
              }) : $(".range-datepicker__item_max").datepicker("option", {
                  minDate: e
              })), $('[data-range-box="rid-1"]').is(":visible") && $("#rid-0").find(".form__date-range-input").removeClass("focused")
          }
          // onChangeMonthYear: function (year, month, inst) {
          //   convertToLists(inst);
          // }
      }),
      $(document).on("click", ".form__date-range-icon", function() {
          $(".form__date-range").removeClass("form__date-range_focus"), $(".input-max").removeClass("focused"), $(this).parent().find(".input-min").focus()
      }))
    }
    
    //rangeDatepickerInit('.range-datepicker__item', '12-2-2017', '12-12-2017');
      
    $(".jq-f-datepicker").length > 0 && ($(".form__date-range").each(function(e) {
        $(this).attr("id", "rid-" + e)
    }), $(document).on('focus', ".jq-f-datepicker", function(e) {
        var t = $(this),
            a = t.parent().offset().left,
            n = t.parent().offset().top + 37,
            i = t.parent().find(".input-min").val(),
            r = t.parent().find(".input-max").val();
        boxId = t.parent().attr("id"), t.parent().addClass("form__date-range_focus");

        $(".range-datepicker").attr("data-range-box", boxId).css({
            left: a,
            top: n
        }).fadeIn(321);

        $(".range-datepicker__item_min").datepicker("setDate", i), $(".range-datepicker__item_max").datepicker("setDate", r), $(".range-datepicker__item_min, .range-datepicker__item_max").removeAttr("style");



    }), $('.jq-f-datepicker').mask("99.99.99"), $(".jq-f-datepicker").val("дд.мм.гг"), $(".jq-f-datepicker").blur(function() {
        var a = $(this);
        if (a.val()) {
            if (a.hasClass("input-max")) {
                var n = a.val(),
                    i = a.parent().find(".input-min").val();
                e(n) && e(i) ? t(n, i) || a.val("дд.мм.гг") : a.val("дд.мм.гг")
            } else if (a.hasClass("input-min")) {
                $(".input-max").removeClass("focused");
                var i = a.val(),
                    n = a.parent().find(".input-max").val();
                e(i) ? e(n) && (t(n, i) || a.val("дд.мм.гг")) : a.val("дд.мм.гг"), a.parent().find(".input-max").addClass("focused")
            }
        } else a.val("дд.мм.гг"), a.parent().find(".input-max").addClass("focused")
    }), $("#form-find-document").submit(function() {
        $(".input-max").removeClass("focused");
        var a = !0;
        return $(this).find(".form__date-range").each(function() {
            var n = $(this),
                i = n.find(".input-max").val(),
                r = n.find(".input-min").val();
            "дд.мм.гг" == i && "дд.мм.гг" == r || (e(i) && e(r) ? t(i, r) || (a = !1, n.find(".input-max").blur(), n.find(".input-min").blur()) : (a = !1, n.find(".input-max").blur(), n.find(".input-min").blur()))
        }), a
    }), $(document).on("click", function(e) {
        $(e.target).closest(".range-datepicker").length ||
        $(e.target).closest(".form__date-range").length ||
        $(e.target).hasClass("ui-corner-all") ||
        $(e.target).hasClass("ui-icon") ||
        $(e.target).closest(".dateListItem").length ? e.preventDefault() :
         ($(".range-datepicker").fadeOut(321), $(".form__date-range").removeClass("form__date-range_focus"), $(".range-datepicker__item_min, .range-datepicker__item_max").removeAttr("style"))
    })), $(document).on("click", ".datepicker__show", function() {
        var e = $(this);
        return e.hasClass("datepicker__show_act") ? e.next().slideUp(321, function() {
            e.removeClass("datepicker__show_act")
        }) : ($(".datepicker__panel").slideUp(321, function() {
            $(".datepicker__show").removeClass("datepicker__show_act")
        }), e.addClass("datepicker__show_act").next().slideDown(321)), !1
    }), $(document).on("click", ".datepicker__col_years a", function() {
        var e = $(this).parent().parent().parent().parent();
        if (!$(this).hasClass("datepicker__a_act") && !$(this).hasClass("datepicker__a_dis")) {
            var t = e.find(".datepicker__show").text().split(".");
            e.find(".datepicker__show").text(t[0] + "." + t[1] + "." + $(this).text()), e.find(".datepicker__col_years a").removeClass("datepicker__a_act"), $(this).addClass("datepicker__a_act")
			var dm = $(this).attr("data-disabled-months");
			var months = $(this).parent().parent().next().find(".datepicker__col_months a");
			months.removeClass("datepicker__a_dis");
			months.each(function(){
				if (dm.match($(this).attr("data-month"))) {
					$(this).addClass("datepicker__a_dis");
					if ($(this).hasClass("datepicker__a_act")) {
						$(this).removeClass("datepicker__a_act");
						var firstndm = months.not(".datepicker__a_dis").first();
						firstndm.click();
					}
				}
			});
        }
        return !1
    }), $(document).on("click", ".datepicker__col_months a", function() {
        var e = $(this).parent().parent().parent().parent().parent();
        if (!$(this).hasClass("datepicker__a_act") && !$(this).hasClass("datepicker__a_dis")) {
            var t = e.find(".datepicker__show").text().split(".");
            e.find(".datepicker__show").text(t[0] + "." + $(this).attr("data-month") + "." + t[2]), e.find(".datepicker__col_months a").removeClass("datepicker__a_act"), $(this).addClass("datepicker__a_act")
        }
        return !1
    }), /*$(document).on("click", ".datepicker__close", function() {
        return $(this).parent().slideUp(321).prev().removeClass("datepicker__show_act"), !1
    }),*/ $(document).on('click', function(){
          $('.datepicker__panel').slideUp(321).prev().removeClass("datepicker__show_act");
    }), $(".tab__btn").click(function() {
        var e = $(this);
        return e.hasClass("tab__btn_active") || (e.parent().find(".tab__btn").removeClass("tab__btn_active"), e.parent().parent().find(".tab__content").slideUp(321), e.addClass("tab__btn_active"), $(e.attr("href")).slideDown(321)), !1
    }), $(".dropdown__btn").click(function() {
        $(".dropdown_active").not($(this).parents(".dropdown_active")).removeClass("dropdown_active");
        var e = $(this);
        return e.hasClass("dropdown__btn_active") ? e.parent().find(".dropdown__content").slideUp(321, function() {
            e.removeClass("dropdown__btn_active")
        }) : ($(".dropdown__content").slideUp(321), $(".dropdown__btn").removeClass("dropdown__btn_active"), e.parent().find(".dropdown__content").slideDown(321, function() {
            e.addClass("dropdown__btn_active")
        })), !1
    }), $(".dropdown__close").click(function() {
        return $(this).parent().slideUp(321).parent().removeClass("dropdown_active").find(".dropdown__btn").removeClass("dropdown__btn_active"), !1
    }), n < 1007 ? $(".on-hover").click(function() {
        console.log(n);
        a($(this), !1);
        if ($('.on-hover-content').length != 0) {
          if ($(window).width() < 641 && $(this).parents('[data-filter="example"]').length < 1) {
            var targetOffset = $('.on-hover-content:visible').offset().top - 67;
  	         setTimeout(function () {
  	           $('html, body').animate({ scrollTop: targetOffset }, 700);
  	         }, 150);
           }
           return false;
          }
    }) : ($(".on-hover").mouseenter(function() {
        a($(this), !0)
    }), $(".on-hover").mouseleave(function() {
        $(this).removeClass("hover")
    })), $(".on-hover").click(function() {
        return !1
    }), $(document).on('click', ".service-dots__btn", function() {
        var e = $(this);
        return e.hasClass("active") || (e.closest(".tile__inner").find(".service-dot-cont").slideUp(321), $("#" + e.attr("data-cont")).slideDown(321), e.siblings().removeClass("active"), e.addClass("active")), !1
    }), $(".service__title button").click(function() {
        var e = $(this);
        return e.hasClass("active") ? e.removeClass("active") : e.addClass("active"), !1
    })
});
