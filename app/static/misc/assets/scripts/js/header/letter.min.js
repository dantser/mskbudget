var letter;
! function() {
    function t(t, e) {
        var i = this;
        i.defaults = {
            box: $(t)
        }, i.opt = $.extend({}, i.defaults, e), i.line = i.opt.box.find(".letter__line"), i.slider = i.opt.box.find(".letter__slider"), i.track = i.opt.box.find(".letter__track"), i.item = i.slider.find(".letter__item"), i.sliderWidth = i.slider.width(), i.itemWidth = i.item.innerWidth(), i.Init(), /msie/.test(navigator.userAgent.toLowerCase()) ? (i.HandlerIE(), i.slider.css("cursor", "default")) : i.Handler()
    }
    t.prototype.getParam = function() {
        var t = this;
        t.offsetLeft = +t.track.attr("data-offset-left"), t.offsetLeft - .05 * t.sliderWidth > 0 ? (t.visibleItemsCount = Math.floor((t.sliderWidth - t.startLeft) / t.itemWidth), t.itemFirst = 0) : (t.visibleItemsCount = Math.floor((t.sliderWidth - .1 * t.sliderWidth) / t.itemWidth), t.itemFirst = Math.round((Math.abs(t.offsetLeft) + .1 * t.sliderWidth) / t.itemWidth)), t.offsetLeft > 0 ? t.itemAligned = Math.round((t.startLeft - t.offsetLeft) / t.itemWidth) : t.itemAligned = Math.round((Math.abs(t.offsetLeft) + t.startLeft) / t.itemWidth)
    }, t.prototype.Line = function(t) {
        var t, e = this;
        if (t) {
            var i = e.line.find(".letter__line-item");
            e.itemL = i.length;
            for (r = 0; r < e.itemL; r++) $(i[r]).attr("data-index", r), 0 == r ? $(i[r]).addClass("letter__line-item_first") : r == e.itemL - 1 && $(i[r]).addClass("letter__line-item_last")
        }
        e.getParam(), e.line.find(".letter__line-item").removeClass("letter__line-item_active letter__line-item_current");
        for (var r = e.itemFirst + e.visibleItemsCount - 1; r >= e.itemFirst; r--) e.line.find('.letter__line-item[data-index="' + r + '"]').addClass("letter__line-item_active");
        window.visibleLettersCountGlobal = e.visibleItemsCount;
        e.line.find('.letter__line-item[data-index="' + e.itemAligned + '"]').addClass("letter__line-item_current")
    }, t.prototype.setCss = function(t) {
        var track = this.track;
        this.slider.animate({scrollLeft: (-t - track.position().left + track.offset().left) }, 800);
        this.track.attr("data-offset-left", t);
    }, t.prototype.Handler = function() {
        function t(t) {
            "left" == t ? n.itemAligned > 0 && (e = n.itemAligned - 1, l = !0) : "right" == t && n.itemL - 1 > n.itemAligned && (e = n.itemAligned + 1, l = !0), l && (l = !1, i = 0 == e ? n.startLeft : -n.itemWidth * e + n.startLeft, n.setCss(i), n.Line())
        }
        var e, i, r, n = this,
            l = !1;
        n.line.find(".letter__btn").click(function() {
            var t = $(this).parent().attr("data-index");
            i = 0 == t ? n.startLeft : -n.itemWidth * t + n.startLeft, n.setCss(i), n.Line()
        }), n.line.find(".arrow").click(function() {
            var e = $(this).attr("data-arrow");
            "left" == e ? t("left") : "right" == e && t("right")
        }), /*n.slider.swipe({
            .*swipe: function(e, i, r, n, l) {
                "right" == i ? t("left", $(this)) : "left" == i && t("right", $(this))
            },
            triggerOnTouchEnd: !1,
            excludedElements: "",
            threshold: 0,
            preventDefaultEvents: true,
            allowPageScroll: 'vertical'
        }),*/ n.slider.find(".letter__hover").mouseenter(function() {
            var e = $(this).attr("data-direct");
            r = setInterval(function() {
                "left" == e ? t("left") : "right" == e && t("right")
            }, 321)
        }), n.slider.find(".letter__hover").mouseleave(function() {
            clearInterval(r)
        })
    }, t.prototype.HandlerIE = function() {
        function t(t) {
            "left" == t ? r.itemAligned > 0 && (e = r.itemAligned - 1, n = !0) : "right" == t && r.itemL - 1 > r.itemAligned && (e = r.itemAligned + 1, n = !0), n && (n = !1, i = 0 == e ? r.startLeft : -r.itemWidth * e + r.startLeft, r.setCss(i), r.Line())
        }
        var e, i, r = this,
            n = !1;
        r.line.find(".letter__btn").click(function() {
            var t = $(this).parent().attr("data-index");
            i = 0 == t ? r.startLeft : -r.itemWidth * t + r.startLeft, r.setCss(i), r.Line()
        }), r.line.find(".arrow").click(function() {
            var e = $(this).attr("data-arrow");
            "left" == e ? t("left") : "right" == e && t("right")
        })
    }, t.prototype.Init = function() {
        var t = this;
        t.itemCount = t.slider.find(".letter__item").length, t.startLeft = ($(window).width() - t.line.width()) / 2, t.track.width(t.itemWidth * t.itemCount + t.startLeft).css("margin-left", t.startLeft).css("padding-right", t.startLeft).attr("data-offset-left", t.startLeft), t.Line(!0)
    }, letter = function(e, i) {
        new t(e, i)
    }
}();
