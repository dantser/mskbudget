include ../../blocks/legend/legend
include ../../blocks/checkbox/checkbox
include ../../blocks/icon/icons

//- legendtype - тип легенды(json файл)
mixin analityc-graphics-round(legendtype)
  +b.analityc-graphics&attributes(attributes)._round
    +e.P.periodtext
      span Плановый период
    +e.cols
      +e.col
        +e.P.year 2017
        +e.graphic._round
      +e.col
        +e.SPAN.period-left
        +e.P.year 2018
        +e.graphic._round
      +e.col
        +e.SPAN.period-right
        +e.P.year 2019
        +e.graphic._round
    if legendtype == 'income1'
      +legend(getData('legend-income1')).analityc-graphics__legend
    if legendtype == 'income2'
      +legend(getData('legend-income2')).analityc-graphics__legend
    if legendtype == 'expenses1'
      +legend(getData('legend-expenses1')).analityc-graphics__legend
    if legendtype == 'expenses2'
      +legend(getData('legend-expenses2')).analityc-graphics__legend
    if legendtype == 'expenses3'
      +legend(getData('legend-expenses3')).analityc-graphics__legend
    if legendtype == 'expenses4'
      +legend(getData('legend-expenses4')).analityc-graphics__legend
    if legendtype == 'expenses5'
      +legend(getData('legend-expenses5')).analityc-graphics__legend
     
//- legendtype - тип легенды(json файл)
mixin analityc-graphics-column(legendtype, expenses)
  +b.analityc-graphics&attributes(attributes)._column
    +e.P.periodtext
      span Плановый период
    +e.P.toptext МЛРД РУБ.
    +e.cols
      +e.col
        +e.P.year 2017
        +e.graphic._column
        +e.bottom
          if expenses
            p Бюджет дейтсвующий
          else
            p Бюджет первоначальный
          p Бюджет с учетом изменений
      +e.col
        +e.SPAN.period-left
        +e.P.year 2018
        +e.graphic._column
        +e.bottom
          if expenses
            p Бюджет дейтсвующий
          else
            p Бюджет первоначальный
          p Бюджет с учетом изменений
      +e.col
        +e.SPAN.period-right
        +e.P.year 2019
        +e.graphic._column
        +e.bottom
          if expenses
            p Бюджет дейтсвующий
          else
            p Бюджет первоначальный
          p Бюджет с учетом изменений
    if legendtype == 'income1'
      +legend(getData('legend-income1')).analityc-graphics__legend
    if legendtype == 'income2'
      +legend(getData('legend-income2')).analityc-graphics__legend
    if legendtype == 'expenses1'
      +legend(getData('legend-expenses1')).analityc-graphics__legend
    if legendtype == 'expenses2'
      +legend(getData('legend-expenses2')).analityc-graphics__legend
    if legendtype == 'expenses3'
      +legend(getData('legend-expenses3')).analityc-graphics__legend
    if legendtype == 'expenses4'
      +legend(getData('legend-expenses4')).analityc-graphics__legend
    if legendtype == 'expenses5'
      +legend(getData('legend-expenses5')).analityc-graphics__legend

//- legendtype - тип легенды(json файл)
mixin analityc-graphics-singleround(legendtype)
  +b.analityc-graphics&attributes(attributes)._singleround
    +e.cols
      +e.col
        +e.P.year 2016
        +e.graphic._round
      +e.col
        if legendtype == 'income1'
          +legend(getData('legend-income1')).analityc-graphics__legend.analityc-graphics__legend_vert
        if legendtype == 'income2'
          +legend(getData('legend-income2')).analityc-graphics__legend.analityc-graphics__legend_vert
        if legendtype == 'expenses1'
          +legend(getData('legend-expenses1')).analityc-graphics__legend.analityc-graphics__legend_vert
        if legendtype == 'expenses2'
          +legend(getData('legend-expenses2')).analityc-graphics__legend.analityc-graphics__legend_vert
        if legendtype == 'expenses3'
          +legend(getData('legend-expenses3')).analityc-graphics__legend.analityc-graphics__legend_vert
        if legendtype == 'expenses4'
          +legend(getData('legend-expenses4')).analityc-graphics__legend.analityc-graphics__legend_vert
        if legendtype == 'expenses5'
          +legend(getData('legend-expenses5')).analityc-graphics__legend.analityc-graphics__legend_vert

//- legendtype - тип легенды(json файл)
mixin analityc-graphics-singleround-alt(legendtype)
  +b.analityc-graphics&attributes(attributes)._singleround
    +e.cols
      +e.col
        +e.P.year 2016
        +e.graphic._round
    if legendtype == 'income1'
      +legend(getData('legend-income1')).analityc-graphics__legend
    if legendtype == 'income2'
      +legend(getData('legend-income2')).analityc-graphics__legend
    if legendtype == 'expenses1'
      +legend(getData('legend-expenses1')).analityc-graphics__legend
    if legendtype == 'expenses2'
      +legend(getData('legend-expenses2')).analityc-graphics__legend
    if legendtype == 'expenses3'
      +legend(getData('legend-expenses3')).analityc-graphics__legend
    if legendtype == 'expenses4'
      +legend(getData('legend-expenses4')).analityc-graphics__legend
    if legendtype == 'expenses5'
      +legend(getData('legend-expenses5')).analityc-graphics__legend

//- title - Заголовок графиков
//- data - json файл с данными для графиков
mixin analityc-graphics-line(title, data)
  +b.analityc-graphics&attributes(attributes)._line
    +e.P.heading= title
    +e.lines
      each obj in data
        +e.DIV(class="__line_"+obj.color+"")
          if obj.strong
            +e.P.line-title 
              strong= obj.title
          else
            +e.P.line-title= obj.title
          +e.line-values 
            = obj.value1
            span /
            = obj.value2
          if obj.overwidth
            +e.line-bar._overwidth
              +e.line-total
              +e.SPAN.line-bar-value= obj.barvalue
              +e.line-fill
          else
            +e.line-bar
              +e.line-total
              +e.SPAN.line-bar-value= obj.barvalue
              +e.line-fill
mixin analityc-graphics-multiline(data)
  +b.analityc-multiline&attributes(attributes)
    p.analityc-graphics__periodtext
      span Плановый период
    .graphic__row
      .graphic__title
      span.graphic__data(data-char='2017') 2017
      span.graphic__data(data-char='2018') 2018
        span.graphic__period-left
      span.graphic__data(data-char='2019') 2019
        span.graphic__period-right
      span.graphic__data
    each obj in data
      +e.DIV(class="__line_"+obj.class)
        +e.A(href="#").title= obj.title
        +e.line-bar
          +e.line-total._green
            +e.line-value= obj.values[0]
          +e.line-total._red
            +e.line-value= obj.values[1]
          +e.line-total._blue
            +e.line-value= obj.values[2]
        +e.SPAN.line-bar-value= obj.barvalue

mixin analityc-graphics-line-alt(data)
  +b.analityc-line&attributes(attributes)._line
    +e.lines
      each obj in data
        +e.DIV(class="__line_"+obj.class)
          +e.A(href="#").title= obj.title
          +e.line-bar._overwidth
            +e.line-total._altred
            +e.line-fill
              +e.line-value= obj.value  
            +e.SPAN.line-bar-value= obj.barvalue

mixin analityc-graphics-mix(data)
  +b.analityc-mix&attributes(attributes)
    +e.round
      +e.round-title= data.roundTitle
      +e.round-content
    +e.lines
      each item in data.item
        +e.line
          if item.strong
            +e.P.title 
              strong= item.title
          else
            +e.P.title= item.title
          if item.overwidth
            +e.line-bar._overwidth
              +e.line-values 
                = item.value1
                span /
                = item.value2
              +e.line-fill
          else
            +e.line-bar
              +e.line-values 
                = item.value1
                span /
                = item.value2
                +e.line-fill

mixin analityc-graphics-js-line(data)
  +b.analityc-js-line&attributes(attributes)
    +e.header
      +icon('car').icon
      +e.H2.heading= data.heading
      +e.A(href=data.link).link Паспорт программы
      +e.H3.subheading= data.subheading
    each item in data.item
      if item.strong
        +e.line._big
          +e.left-block
            +e.P.title
              strong= item.title
            +e.line-bar
              +e.line-total._altred
              +e.line-fill
                +e.line-values 
                  = item.value1
                  span /
                  = item.value2 
              +e.SPAN.line-bar-value= item.barvalue
          +e.right-block
            each items in item
              +e.line
                +e.P.title= items.title
                +e.line-bar
                  +e.line-total._altred
                  +e.line-fill
                    +e.line-values 
                      = items.value1
                      span /
                      = items.value2 
                  +e.SPAN.line-bar-value= items.barvalue
      else
        +e.line
          +e.left-block
            +e.P.title= item.title
            +e.line-bar
              +e.line-total._altred
              +e.line-fill
                +e.line-values 
                  = item.value1
                  span /
                  = item.value2 
              +e.SPAN.line-bar-value= item.barvalue
          +e.right-block
            each items in item
              +e.line
                +e.P.title= items.title
                +e.line-bar
                  +e.line-total._altred
                  +e.line-fill
                    +e.line-values 
                      = items.value1
                      span /
                      = items.value2 
                  +e.SPAN.line-bar-value= items.barvalue
//- data - json файл с данными для графиков
mixin analityc-graphics-line-vertical(data, isWide)
  +b.analityc-graphics-line-vertical&attributes(attributes)

    each item in data
      +e.graphic
        +e.lines

          if isWide
            +e.line._pink
              +e.line-bar-value= item.values[0]
              +e.line-fill
            +e.line._greenyellow
              +e.line-bar-value= item.values[1]
              +e.line-fill
            +e.line._violet
              +e.line-bar-value= item.values[2]
              +e.line-fill
            +e.line._gray
              +e.line-bar-value= item.values[3]
              +e.line-fill
            +e.line._blue
              +e.line-bar-value= item.values[4]
              +e.line-fill
            +e.line._green
              +e.line-bar-value= item.values[5]
              +e.line-fill
            +e.line._red
              +e.line-bar-value= item.values[6]
              +e.line-fill
          else
            +e.line._altblue
              +e.line-bar-value= item.values[0]
              +e.line-fill
            +e.line._pink
              +e.line-bar-value= item.values[1]
              +e.line-fill
            +e.line._green._neg
              +e.line-bar-value= item.values[2]
              +e.line-fill

        +e.caption
          +e.STRONG.caption-year= item.year
          +e.SPAN.caption-text= item.text

mixin analityc-graphics-line-vertical-alt(data)
  +b.analityc-graphics-line-vertical._alt&attributes(attributes)

    each item in data
      +e.graphic
        +e.lines

          +e.line._red
            +e.line-bar-value= item.values[0]
            +e.line-fill
          +e.line._green
            +e.line-bar-value= item.values[1]
            +e.line-fill
          +e.line._pink
            +e.line-bar-value= item.values[2]
            +e.line-fill
          +e.line._grey
            +e.line-bar-value= item.values[3]
            +e.line-fill
          +e.line._altblue
            +e.line-bar-value= item.values[4]
            +e.line-fill
          +e.line._lightgreen
            +e.line-bar-value= item.values[5]
            +e.line-fill
          +e.line._blue
            +e.line-bar-value= item.values[6]
            +e.line-fill

        +e.caption
          +e.STRONG.caption-year= item.year
          +e.SPAN.caption-text= item.text
          
mixin analityc-graphics-bars(data)
  +b.analityc-graphics-bars&attributes(attributes)

    each item in data
      +e.graphic
        +e.lines

          +e.line
            +e.line-bar-value= item.value
            +e.line-fill._lightgreen
              +e.val= item.values[5]
            +e.line-fill._altblue
              +e.val= item.values[4]
            +e.line-fill._grey
              +e.val= item.values[3]
            +e.line-fill._pink
              +e.val= item.values[2]
            +e.line-fill._green
              +e.val= item.values[1]
            +e.line-fill._red
              +e.val= item.values[0]
          if item.changes
            +e.changes
              +e.abs= item.changes[0]
              +e.percent= item.changes[1]
        +e.caption
          +e.STRONG.caption-year= item.year
          +e.SPAN.caption-text= item.text
mixin analityc-graphics-bars-year(data)
  +b.analityc-graphics-bars&attributes(attributes)

    each item in data
      +e.graphic
        +e.lines

          +e.line
            +e.line-bar-value= item.value
            +e.line-fill._lightgreen
              +e.val= item.values[3]
            +e.line-fill._altblue
              +e.val= item.values[2]
            +e.line-fill._pink
              +e.val= item.values[1]
            +e.line-fill._red
              +e.val= item.values[0]
          if item.changes
            +e.changes
              +e.abs= item.changes[0]
              +e.percent= item.changes[1]
        +e.caption
          +e.STRONG.caption-year= item.year
          +e.SPAN.caption-text= item.text
          
mixin analityc-graphics-bars-alt(data)
  +b.analityc-graphics-bars&attributes(attributes)

    each item in data
      +e.graphic
        +e.lines

          +e.line
            if item.value
              +e.line-bar-value= item.value
              +e.line-fill._green
                +e.val= item.values[1]
              +e.line-fill._red
                +e.val= item.values[0]
            if item.change
              +e.line-fill._transparentgreen
                +e.val= item.change[3]
                +e.val= item.change[2]
              +e.line-fill._transparentred
                +e.val= item.change[1]
                +e.val= item.change[0]
          if item.changes
            +e.changes
              +e.abs= item.changes[0]
              +e.percent= item.changes[1]
        +e.caption
          +e.STRONG.caption-year= item.year
          +e.SPAN.caption-text= item.text
mixin analityc-graphics-bars2(data)
  +b.analityc-graphics-bars&attributes(attributes)

    each item in data
      +e.graphic
        +e.lines

          +e.line
            if item.changes
              +e.line-fill._red
                +e.val= item.values[0]
              +e.changes
                +e.abs= item.changes[0]
                +e.percent= item.changes[1]
            else
              +e.line-fill._transparentred
              
        +e.caption
          +e.STRONG.caption-year= item.year
          +e.SPAN.caption-text= item.text
mixin analityc-graphics-classic()
  +b.analityc-graphics-classic&attributes(attributes)
    //- реализация на js

mixin analityc-graphics-custom1()
  +b.analityc-graphics-custom&attributes(attributes)
    //- реализация на js

mixin analityc-graphics-custom2()
  +b.analityc-graphics-custom&attributes(attributes)
    //- реализация на js



//- Государственный долг
mixin analityc-graphics-govdebt-approved()
  +b.analityc-graphics&attributes(attributes)._approved
    +e.P.periodtext
      span Плановый период
    +e.cols
      +e.col._altcolumn
        +e.P.year 2017
        +e.graphic._altcolumn
      +e.col._altcolumn
        +e.SPAN.period-left
        +e.P.year 2018
        +e.graphic._altcolumn
      +e.col._altcolumn
        +e.SPAN.period-right
        +e.P.year 2019
        +e.graphic._altcolumn
    +legend(getData('legend-govdebt1')).__legend

mixin analityc-graphics-govdebt-changes()
  +b.analityc-graphics&attributes(attributes)._changes
    +e.P.periodtext
      span Плановый период
    +e.cols
      +e.col
        +e.P.year 2017
        +e.changes._neg
          +e.abs +14,0
          +e.percent +22,8%
        +e.graphic._double-column
          +e.graphic-column
            +e.graphic-column-val 61,5
          +e.graphic-column
            +e.graphic-column-val 75,5
        +e.bottom
          p Бюджет утвержденный
          p Бюджет с учетом изменений
      +e.col
        +e.SPAN.period-left
        +e.P.year 2018
        +e.changes._rev
          +e.abs -10,0
          +e.percent -3,8%
        +e.graphic._double-column
          +e.graphic-column
            +e.graphic-column-val 61,5
          +e.graphic-column
            +e.graphic-column-val 47,1
        +e.bottom
          p Бюджет утвержденный
          p Бюджет с учетом изменений
      +e.col
        +e.SPAN.period-right
        +e.P.year 2019
        +e.graphic._double-column
          +e.graphic-column
            +e.graphic-column-val 57,1
          +e.graphic-column
            +e.graphic-column-val 57,1
        +e.bottom
          p Бюджет утвержденный
          p Бюджет с учетом изменений
    +b.legend.__legend
      +e.P.item._altgreen Верхний предел государственного долга, млрд руб.
          
mixin analityc-graphics-govdebt-date()
  +b.analityc-graphics&attributes(attributes)._date
    +e.P.graphic-heading Объем государственного долга на 01.02.2017
    +e.cols
      +e.col._wide
        +e.graphic-triangle
          img(src="assets/images/graphics-border.svg")
          +e.graphic-angle._big
          +e.graphic-angle._right-top
          +e.graphic-angle._right-bottom
      +e.col
        +b.legend.__legend._vert
          +e.P.item._pink
            +icon('depfin-icons-28').__icon._pink
            | Развитие транспортной системы
          +e.P.item._blue
            +icon('depfin-icons-29').__icon._blue
            | Банковские кредиты
          +e.P.item._green
            +icon('depfin-icons-30').__icon._green
            | Бюджетные кредиты
          +e.P.item._yellow
            +icon('depfin-icons-27').__icon._yellow
            | Государственные гарантии

mixin analityc-graphics-govdebt-repayment()
  +b.analityc-graphics&attributes(attributes)._repayment
    +e.graphic._multicolumn
      +e.graphic-column
        +e.graphic-column-fill
          +e.P.graphic-column-val 26,1
      +e.graphic-column._low
        +e.graphic-column-fill
          +e.P.graphic-column-val 4,4
      +e.graphic-column._zero
        +e.graphic-column-fill
          +e.P.graphic-column-val 0,0
      +e.graphic-column._zero
        +e.graphic-column-fill
          +e.P.graphic-column-val 0,0
      +e.graphic-column._zero
        +e.graphic-column-fill
          +e.P.graphic-column-val 0,0
      +e.graphic-column
        +e.graphic-column-fill
          +e.P.graphic-column-val 30,0
      +e.graphic-column._low
        +e.graphic-column-fill
          +e.P.graphic-column-val 1,5
    +e.graphic-years
      +e.P.graphic-year 2017
      +e.P.graphic-year 2018
      +e.P.graphic-year 2019
      +e.P.graphic-year 2020
      +e.P.graphic-year 2021
      +e.P.graphic-year 2022
      +e.P.graphic-year 2025-2034
